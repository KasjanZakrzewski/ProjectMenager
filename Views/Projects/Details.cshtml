@model ProjectMenager.Models.MyModel<Project, List<Item>, List<Member>>
@using Microsoft.AspNetCore.Html;
@using NonFactors.Mvc.Grid;
@{
    ViewData["Title"] = "Details";
    @if (User.IsInRole("ProjectManager"))
    {
        Layout = "~/Views/Shared/_Layout_Project.cshtml";
    }
    @if (User.IsInRole("Administrator"))
    {
        Layout = "~/Views/Shared/_Layout_Admin.cshtml";
    }
}
<link href="~/css/mvc-grid/mvc-grid.css" rel="stylesheet" />

<h1>Project details</h1>

<div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Obj1.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Obj1.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Obj1.Status)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Obj1.Status)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Obj1.StartDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Obj1.StartDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Obj1.EndDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Obj1.EndDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Obj1.Manager)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Obj1.Manager.UserName)
        </dd>
    </dl>
</div>
<div>
    <hr />
    <h4>Options:</h4>
    <a asp-action="Edit" asp-route-id="@Model?.Obj1.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<div>
    <hr />
    <h4>Items:</h4>
    <a asp-controller="Items" asp-action="Create" asp-route-id="@Model?.Obj1.Id">Add New</a>
    @if (Model.Obj2 != null)
    {
        @(
            Html
            .Grid(Model.Obj2)
            .Build(c =>
            {
                c.Add(Model => Model.Name).Titled("Name");
                c.Add(Model => Model.Status).Titled("Status");
                c.Add(Model => Model.priority).Titled("Priority");

                if (User.IsInRole("ProjectManager"))
                {
                    c.Add(Model => Model.Id).Titled("Actions")
                    .RenderedAs(model => new HtmlString($"<a href='/Items/Details/{model.Id}'> Details </a> | <a href='/Items/Delete/{model.Id}'> Remove </a>"));
                }
            }
            ).Filterable()
            .Pageable(pager =>
            {
                pager.PageSizes = new Dictionary<int, string> { { 0, "all" } };
                pager.PagesToDisplay = 3;
                pager.RowsPerPage = 5;
            })
            .Sortable()
            )
    }
    else
    {
        <p>---</p>
    }
</div>

<div>
    <hr />
    <h4>Members:</h4>
    <a asp-controller="Members" asp-action="Create" asp-route-id="@Model?.Obj1.Id">Add New</a>
    @if (Model.Obj3 != null)
    {
        @(
            Html
            .Grid(Model.Obj3)
            .Build(c =>
            {
                c.Add(Model => Model.Employee.UserName).Titled("FullName");
                c.Add(Model => Model.Employee.Email).Titled("Email");

                if (User.IsInRole("ProjectManager"))
                {
                    c.Add(Model => Model.Id).Titled("Actions")
                    .RenderedAs(model => new HtmlString($"<a href='/Members/Delete/{model.Id}'> Remove </a>"));
                }
            }
            ).Filterable()
            .Pageable(pager =>
            {
                pager.PageSizes = new Dictionary<int, string> { { 0, "all" } };
                pager.PagesToDisplay = 3;
                pager.RowsPerPage = 5;
            })
            .Sortable()
            )
    }
    else
    {
        <p>---</p>
    }
</div>
<script src="~/js/mvc-grid/mvc-grid.js"></script>
<script>
    document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
</script>